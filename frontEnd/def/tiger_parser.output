Terminals unused in grammar

   COMMENT
   LET
   NIL
   IN
   ENDD
   BREAK
   IMPORT
   PRIMITIVE
   TRY
   CLASS
   EXTENDS
   METHOD
   NEW
   EQ
   LOWER
   GREATER
   LOWEREQ
   GREATEREQ
   AND
   OR
   SEMICOLON
   DOT


State 2 conflicts: 1 shift/reduce
State 12 conflicts: 20 reduce/reduce
State 13 conflicts: 1 shift/reduce
State 16 conflicts: 1 shift/reduce
State 18 conflicts: 1 shift/reduce
State 19 conflicts: 1 shift/reduce
State 22 conflicts: 1 shift/reduce
State 23 conflicts: 1 shift/reduce
State 24 conflicts: 1 shift/reduce
State 25 conflicts: 1 shift/reduce
State 26 conflicts: 1 shift/reduce
State 28 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce


Grammar

    0 $accept: Goal "end of file"

    1 Goal: Goal Stmt
    2     | Stmt
    3     | Goal FunctionDecl
    4     | FunctionDecl
    5     | "end of file"

    6 Stmt: Expr AllowNewline
    7     | error AllowNewline
    8     | SeqExpr AllowNewline
    9     | IfStmt AllowNewline
   10     | ForStmt AllowNewline
   11     | Declaration AllowNewline
   12     | WhileStmt AllowNewline
   13     | ArrayDecl AllowNewline
   14     | ArrayBuild AllowNewline
   15     | FunctionCall AllowNewline
   16     | STRING_ID
   17     | NUMBER

   18 Expr: Expr ADD Term
   19     | Expr SUB Term
   20     | Term

   21 Term: Term MULTI NUMBER
   22     | Term DIVIDE NUMBER
   23     | NUMBER
   24     | ID

   25 Declaration: TypeDecl
   26            | VarDecl

   27 SeqExpr: LPAREN AllowNewline Stmts RPAREN

   28 Stmts: Stmts Stmt
   29      | Stmt

   30 FunctionDecl: FUNCTION ID LPAREN RPAREN ASSIGNEQ AllowNewline Stmt
   31             | FUNCTION ID LPAREN RPAREN COLON TYPE_ID ASSIGNEQ AllowNewline Stmt

   32 Args: ID COLON TYPE_ID COMMA Args
   33     | ID COLON TYPE_ID
   34     | %empty

   35 VarDecl: VAR ID BECOMES Stmt
   36        | VAR ID COLON TYPE_ID BECOMES Stmt
   37        | VAR ID COLON TYPE_ID

   38 AllowNewline: NEWLINE
   39             | %empty

   40 IfStmt: IF Stmt THEN Stmt ELSE Stmt
   41       | IF Stmt THEN Stmt

   42 ForStmt: FOR ID BECOMES Stmt TO Stmt DO Stmt

   43 WhileStmt: WHILE Stmt DO Stmt

   44 ArrayDecl: ARRAY OF TYPE_ID

   45 ArrayBuild: VAR ID BECOMES ID LBRAC Stmt RBRAC OF Stmt

   46 TypeDecl: TYPE ID ASSIGNEQ TYPE_ID

   47 FunctionCall: ID LPAREN Args RPAREN


Terminals, with rules where they appear

"end of file" (0) 0 5
error (256) 7
NEWLINE (258) 38
COMMENT (259)
VAR (260) 35 36 37 45
LET (261)
TYPE (262) 46
IF (263) 40 41
THEN (264) 40 41
FOR (265) 42
WHILE (266) 43
LBRAC (267) 45
RBRAC (268) 45
LPAREN (269) 27 30 31 47
RPAREN (270) 27 30 31 47
NIL (271)
ARRAY (272) 44
ELSE (273) 40
TO (274) 42
DO (275) 42 43
IN (276)
ENDD (277)
OF (278) 44 45
BREAK (279)
IMPORT (280)
PRIMITIVE (281)
TRY (282)
FUNCTION (283) 30 31
CLASS (284)
EXTENDS (285)
METHOD (286)
NEW (287)
ADD (288) 18
SUB (289) 19
MULTI (290) 21
DIVIDE (291) 22
EQ (292)
ASSIGNEQ (293) 30 31 46
LOWER (294)
GREATER (295)
LOWEREQ (296)
GREATEREQ (297)
AND (298)
OR (299)
COLON (300) 31 32 33 36 37
SEMICOLON (301)
BECOMES (302) 35 36 42 45
DOT (303)
COMMA (304) 32
STRING_ID (305) 16
NUMBER (306) 17 21 22 23
TYPE_ID (307) 31 32 33 36 37 44 46
ID (308) 24 30 31 32 33 35 36 37 42 45 46 47


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
Goal (55)
    on left: 1 2 3 4 5, on right: 0 1 3
Stmt (56)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17, on right: 1 2 28 29 30
    31 35 36 40 41 42 43 45
Expr (57)
    on left: 18 19 20, on right: 6 18 19
Term (58)
    on left: 21 22 23 24, on right: 18 19 20 21 22
Declaration (59)
    on left: 25 26, on right: 11
SeqExpr (60)
    on left: 27, on right: 8
Stmts (61)
    on left: 28 29, on right: 27 28
FunctionDecl (62)
    on left: 30 31, on right: 3 4
Args (63)
    on left: 32 33 34, on right: 32 47
VarDecl (64)
    on left: 35 36 37, on right: 26
AllowNewline (65)
    on left: 38 39, on right: 6 7 8 9 10 11 12 13 14 15 27 30 31
IfStmt (66)
    on left: 40 41, on right: 9
ForStmt (67)
    on left: 42, on right: 10
WhileStmt (68)
    on left: 43, on right: 12
ArrayDecl (69)
    on left: 44, on right: 13
ArrayBuild (70)
    on left: 45, on right: 14
TypeDecl (71)
    on left: 46, on right: 25
FunctionCall (72)
    on left: 47, on right: 15


State 0

    0 $accept: . Goal "end of file"

    "end of file"  shift, and go to state 1
    error          shift, and go to state 2
    VAR            shift, and go to state 3
    TYPE           shift, and go to state 4
    IF             shift, and go to state 5
    FOR            shift, and go to state 6
    WHILE          shift, and go to state 7
    LPAREN         shift, and go to state 8
    ARRAY          shift, and go to state 9
    FUNCTION       shift, and go to state 10
    STRING_ID      shift, and go to state 11
    NUMBER         shift, and go to state 12
    ID             shift, and go to state 13

    Goal          go to state 14
    Stmt          go to state 15
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    FunctionDecl  go to state 20
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 1

    5 Goal: "end of file" .

    $default  reduce using rule 5 (Goal)


State 2

    7 Stmt: error . AllowNewline

    NEWLINE  shift, and go to state 29

    NEWLINE   [reduce using rule 39 (AllowNewline)]
    $default  reduce using rule 39 (AllowNewline)

    AllowNewline  go to state 30


State 3

   35 VarDecl: VAR . ID BECOMES Stmt
   36        | VAR . ID COLON TYPE_ID BECOMES Stmt
   37        | VAR . ID COLON TYPE_ID
   45 ArrayBuild: VAR . ID BECOMES ID LBRAC Stmt RBRAC OF Stmt

    ID  shift, and go to state 31


State 4

   46 TypeDecl: TYPE . ID ASSIGNEQ TYPE_ID

    ID  shift, and go to state 32


State 5

   40 IfStmt: IF . Stmt THEN Stmt ELSE Stmt
   41       | IF . Stmt THEN Stmt

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 13

    Stmt          go to state 33
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 6

   42 ForStmt: FOR . ID BECOMES Stmt TO Stmt DO Stmt

    ID  shift, and go to state 34


State 7

   43 WhileStmt: WHILE . Stmt DO Stmt

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 13

    Stmt          go to state 35
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 8

   27 SeqExpr: LPAREN . AllowNewline Stmts RPAREN

    NEWLINE  shift, and go to state 29

    $default  reduce using rule 39 (AllowNewline)

    AllowNewline  go to state 36


State 9

   44 ArrayDecl: ARRAY . OF TYPE_ID

    OF  shift, and go to state 37


State 10

   30 FunctionDecl: FUNCTION . ID LPAREN RPAREN ASSIGNEQ AllowNewline Stmt
   31             | FUNCTION . ID LPAREN RPAREN COLON TYPE_ID ASSIGNEQ AllowNewline Stmt

    ID  shift, and go to state 38


State 11

   16 Stmt: STRING_ID .

    $default  reduce using rule 16 (Stmt)


State 12

   17 Stmt: NUMBER .
   23 Term: NUMBER .

    "end of file"  reduce using rule 17 (Stmt)
    "end of file"  [reduce using rule 23 (Term)]
    error          reduce using rule 17 (Stmt)
    error          [reduce using rule 23 (Term)]
    NEWLINE        reduce using rule 17 (Stmt)
    NEWLINE        [reduce using rule 23 (Term)]
    VAR            reduce using rule 17 (Stmt)
    VAR            [reduce using rule 23 (Term)]
    TYPE           reduce using rule 17 (Stmt)
    TYPE           [reduce using rule 23 (Term)]
    IF             reduce using rule 17 (Stmt)
    IF             [reduce using rule 23 (Term)]
    THEN           reduce using rule 17 (Stmt)
    THEN           [reduce using rule 23 (Term)]
    FOR            reduce using rule 17 (Stmt)
    FOR            [reduce using rule 23 (Term)]
    WHILE          reduce using rule 17 (Stmt)
    WHILE          [reduce using rule 23 (Term)]
    RBRAC          reduce using rule 17 (Stmt)
    RBRAC          [reduce using rule 23 (Term)]
    LPAREN         reduce using rule 17 (Stmt)
    LPAREN         [reduce using rule 23 (Term)]
    RPAREN         reduce using rule 17 (Stmt)
    RPAREN         [reduce using rule 23 (Term)]
    ARRAY          reduce using rule 17 (Stmt)
    ARRAY          [reduce using rule 23 (Term)]
    ELSE           reduce using rule 17 (Stmt)
    ELSE           [reduce using rule 23 (Term)]
    TO             reduce using rule 17 (Stmt)
    TO             [reduce using rule 23 (Term)]
    DO             reduce using rule 17 (Stmt)
    DO             [reduce using rule 23 (Term)]
    FUNCTION       reduce using rule 17 (Stmt)
    FUNCTION       [reduce using rule 23 (Term)]
    ADD            reduce using rule 23 (Term)
    SUB            reduce using rule 23 (Term)
    MULTI          reduce using rule 23 (Term)
    DIVIDE         reduce using rule 23 (Term)
    STRING_ID      reduce using rule 17 (Stmt)
    STRING_ID      [reduce using rule 23 (Term)]
    NUMBER         reduce using rule 17 (Stmt)
    NUMBER         [reduce using rule 23 (Term)]
    ID             reduce using rule 17 (Stmt)
    ID             [reduce using rule 23 (Term)]
    $default       reduce using rule 17 (Stmt)


State 13

   24 Term: ID .
   47 FunctionCall: ID . LPAREN Args RPAREN

    LPAREN  shift, and go to state 39

    LPAREN    [reduce using rule 24 (Term)]
    $default  reduce using rule 24 (Term)


State 14

    0 $accept: Goal . "end of file"
    1 Goal: Goal . Stmt
    3     | Goal . FunctionDecl

    "end of file"  shift, and go to state 40
    error          shift, and go to state 2
    VAR            shift, and go to state 3
    TYPE           shift, and go to state 4
    IF             shift, and go to state 5
    FOR            shift, and go to state 6
    WHILE          shift, and go to state 7
    LPAREN         shift, and go to state 8
    ARRAY          shift, and go to state 9
    FUNCTION       shift, and go to state 10
    STRING_ID      shift, and go to state 11
    NUMBER         shift, and go to state 12
    ID             shift, and go to state 13

    Stmt          go to state 41
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    FunctionDecl  go to state 42
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 15

    2 Goal: Stmt .

    $default  reduce using rule 2 (Goal)


State 16

    6 Stmt: Expr . AllowNewline
   18 Expr: Expr . ADD Term
   19     | Expr . SUB Term

    NEWLINE  shift, and go to state 29
    ADD      shift, and go to state 43
    SUB      shift, and go to state 44

    NEWLINE   [reduce using rule 39 (AllowNewline)]
    $default  reduce using rule 39 (AllowNewline)

    AllowNewline  go to state 45


State 17

   20 Expr: Term .
   21 Term: Term . MULTI NUMBER
   22     | Term . DIVIDE NUMBER

    MULTI   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    $default  reduce using rule 20 (Expr)


State 18

   11 Stmt: Declaration . AllowNewline

    NEWLINE  shift, and go to state 29

    NEWLINE   [reduce using rule 39 (AllowNewline)]
    $default  reduce using rule 39 (AllowNewline)

    AllowNewline  go to state 48


State 19

    8 Stmt: SeqExpr . AllowNewline

    NEWLINE  shift, and go to state 29

    NEWLINE   [reduce using rule 39 (AllowNewline)]
    $default  reduce using rule 39 (AllowNewline)

    AllowNewline  go to state 49


State 20

    4 Goal: FunctionDecl .

    $default  reduce using rule 4 (Goal)


State 21

   26 Declaration: VarDecl .

    $default  reduce using rule 26 (Declaration)


State 22

    9 Stmt: IfStmt . AllowNewline

    NEWLINE  shift, and go to state 29

    NEWLINE   [reduce using rule 39 (AllowNewline)]
    $default  reduce using rule 39 (AllowNewline)

    AllowNewline  go to state 50


State 23

   10 Stmt: ForStmt . AllowNewline

    NEWLINE  shift, and go to state 29

    NEWLINE   [reduce using rule 39 (AllowNewline)]
    $default  reduce using rule 39 (AllowNewline)

    AllowNewline  go to state 51


State 24

   12 Stmt: WhileStmt . AllowNewline

    NEWLINE  shift, and go to state 29

    NEWLINE   [reduce using rule 39 (AllowNewline)]
    $default  reduce using rule 39 (AllowNewline)

    AllowNewline  go to state 52


State 25

   13 Stmt: ArrayDecl . AllowNewline

    NEWLINE  shift, and go to state 29

    NEWLINE   [reduce using rule 39 (AllowNewline)]
    $default  reduce using rule 39 (AllowNewline)

    AllowNewline  go to state 53


State 26

   14 Stmt: ArrayBuild . AllowNewline

    NEWLINE  shift, and go to state 29

    NEWLINE   [reduce using rule 39 (AllowNewline)]
    $default  reduce using rule 39 (AllowNewline)

    AllowNewline  go to state 54


State 27

   25 Declaration: TypeDecl .

    $default  reduce using rule 25 (Declaration)


State 28

   15 Stmt: FunctionCall . AllowNewline

    NEWLINE  shift, and go to state 29

    NEWLINE   [reduce using rule 39 (AllowNewline)]
    $default  reduce using rule 39 (AllowNewline)

    AllowNewline  go to state 55


State 29

   38 AllowNewline: NEWLINE .

    $default  reduce using rule 38 (AllowNewline)


State 30

    7 Stmt: error AllowNewline .

    $default  reduce using rule 7 (Stmt)


State 31

   35 VarDecl: VAR ID . BECOMES Stmt
   36        | VAR ID . COLON TYPE_ID BECOMES Stmt
   37        | VAR ID . COLON TYPE_ID
   45 ArrayBuild: VAR ID . BECOMES ID LBRAC Stmt RBRAC OF Stmt

    COLON    shift, and go to state 56
    BECOMES  shift, and go to state 57


State 32

   46 TypeDecl: TYPE ID . ASSIGNEQ TYPE_ID

    ASSIGNEQ  shift, and go to state 58


State 33

   40 IfStmt: IF Stmt . THEN Stmt ELSE Stmt
   41       | IF Stmt . THEN Stmt

    THEN  shift, and go to state 59


State 34

   42 ForStmt: FOR ID . BECOMES Stmt TO Stmt DO Stmt

    BECOMES  shift, and go to state 60


State 35

   43 WhileStmt: WHILE Stmt . DO Stmt

    DO  shift, and go to state 61


State 36

   27 SeqExpr: LPAREN AllowNewline . Stmts RPAREN

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 13

    Stmt          go to state 62
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    Stmts         go to state 63
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 37

   44 ArrayDecl: ARRAY OF . TYPE_ID

    TYPE_ID  shift, and go to state 64


State 38

   30 FunctionDecl: FUNCTION ID . LPAREN RPAREN ASSIGNEQ AllowNewline Stmt
   31             | FUNCTION ID . LPAREN RPAREN COLON TYPE_ID ASSIGNEQ AllowNewline Stmt

    LPAREN  shift, and go to state 65


State 39

   47 FunctionCall: ID LPAREN . Args RPAREN

    ID  shift, and go to state 66

    $default  reduce using rule 34 (Args)

    Args  go to state 67


State 40

    0 $accept: Goal "end of file" .

    $default  accept


State 41

    1 Goal: Goal Stmt .

    $default  reduce using rule 1 (Goal)


State 42

    3 Goal: Goal FunctionDecl .

    $default  reduce using rule 3 (Goal)


State 43

   18 Expr: Expr ADD . Term

    NUMBER  shift, and go to state 68
    ID      shift, and go to state 69

    Term  go to state 70


State 44

   19 Expr: Expr SUB . Term

    NUMBER  shift, and go to state 68
    ID      shift, and go to state 69

    Term  go to state 71


State 45

    6 Stmt: Expr AllowNewline .

    $default  reduce using rule 6 (Stmt)


State 46

   21 Term: Term MULTI . NUMBER

    NUMBER  shift, and go to state 72


State 47

   22 Term: Term DIVIDE . NUMBER

    NUMBER  shift, and go to state 73


State 48

   11 Stmt: Declaration AllowNewline .

    $default  reduce using rule 11 (Stmt)


State 49

    8 Stmt: SeqExpr AllowNewline .

    $default  reduce using rule 8 (Stmt)


State 50

    9 Stmt: IfStmt AllowNewline .

    $default  reduce using rule 9 (Stmt)


State 51

   10 Stmt: ForStmt AllowNewline .

    $default  reduce using rule 10 (Stmt)


State 52

   12 Stmt: WhileStmt AllowNewline .

    $default  reduce using rule 12 (Stmt)


State 53

   13 Stmt: ArrayDecl AllowNewline .

    $default  reduce using rule 13 (Stmt)


State 54

   14 Stmt: ArrayBuild AllowNewline .

    $default  reduce using rule 14 (Stmt)


State 55

   15 Stmt: FunctionCall AllowNewline .

    $default  reduce using rule 15 (Stmt)


State 56

   36 VarDecl: VAR ID COLON . TYPE_ID BECOMES Stmt
   37        | VAR ID COLON . TYPE_ID

    TYPE_ID  shift, and go to state 74


State 57

   35 VarDecl: VAR ID BECOMES . Stmt
   45 ArrayBuild: VAR ID BECOMES . ID LBRAC Stmt RBRAC OF Stmt

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 75

    Stmt          go to state 76
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 58

   46 TypeDecl: TYPE ID ASSIGNEQ . TYPE_ID

    TYPE_ID  shift, and go to state 77


State 59

   40 IfStmt: IF Stmt THEN . Stmt ELSE Stmt
   41       | IF Stmt THEN . Stmt

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 13

    Stmt          go to state 78
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 60

   42 ForStmt: FOR ID BECOMES . Stmt TO Stmt DO Stmt

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 13

    Stmt          go to state 79
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 61

   43 WhileStmt: WHILE Stmt DO . Stmt

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 13

    Stmt          go to state 80
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 62

   29 Stmts: Stmt .

    $default  reduce using rule 29 (Stmts)


State 63

   27 SeqExpr: LPAREN AllowNewline Stmts . RPAREN
   28 Stmts: Stmts . Stmt

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    RPAREN     shift, and go to state 81
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 13

    Stmt          go to state 82
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 64

   44 ArrayDecl: ARRAY OF TYPE_ID .

    $default  reduce using rule 44 (ArrayDecl)


State 65

   30 FunctionDecl: FUNCTION ID LPAREN . RPAREN ASSIGNEQ AllowNewline Stmt
   31             | FUNCTION ID LPAREN . RPAREN COLON TYPE_ID ASSIGNEQ AllowNewline Stmt

    RPAREN  shift, and go to state 83


State 66

   32 Args: ID . COLON TYPE_ID COMMA Args
   33     | ID . COLON TYPE_ID

    COLON  shift, and go to state 84


State 67

   47 FunctionCall: ID LPAREN Args . RPAREN

    RPAREN  shift, and go to state 85


State 68

   23 Term: NUMBER .

    $default  reduce using rule 23 (Term)


State 69

   24 Term: ID .

    $default  reduce using rule 24 (Term)


State 70

   18 Expr: Expr ADD Term .
   21 Term: Term . MULTI NUMBER
   22     | Term . DIVIDE NUMBER

    MULTI   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    $default  reduce using rule 18 (Expr)


State 71

   19 Expr: Expr SUB Term .
   21 Term: Term . MULTI NUMBER
   22     | Term . DIVIDE NUMBER

    MULTI   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    $default  reduce using rule 19 (Expr)


State 72

   21 Term: Term MULTI NUMBER .

    $default  reduce using rule 21 (Term)


State 73

   22 Term: Term DIVIDE NUMBER .

    $default  reduce using rule 22 (Term)


State 74

   36 VarDecl: VAR ID COLON TYPE_ID . BECOMES Stmt
   37        | VAR ID COLON TYPE_ID .

    BECOMES  shift, and go to state 86

    $default  reduce using rule 37 (VarDecl)


State 75

   24 Term: ID .
   45 ArrayBuild: VAR ID BECOMES ID . LBRAC Stmt RBRAC OF Stmt
   47 FunctionCall: ID . LPAREN Args RPAREN

    LBRAC   shift, and go to state 87
    LPAREN  shift, and go to state 39

    LPAREN    [reduce using rule 24 (Term)]
    $default  reduce using rule 24 (Term)


State 76

   35 VarDecl: VAR ID BECOMES Stmt .

    $default  reduce using rule 35 (VarDecl)


State 77

   46 TypeDecl: TYPE ID ASSIGNEQ TYPE_ID .

    $default  reduce using rule 46 (TypeDecl)


State 78

   40 IfStmt: IF Stmt THEN Stmt . ELSE Stmt
   41       | IF Stmt THEN Stmt .

    ELSE  shift, and go to state 88

    ELSE      [reduce using rule 41 (IfStmt)]
    $default  reduce using rule 41 (IfStmt)


State 79

   42 ForStmt: FOR ID BECOMES Stmt . TO Stmt DO Stmt

    TO  shift, and go to state 89


State 80

   43 WhileStmt: WHILE Stmt DO Stmt .

    $default  reduce using rule 43 (WhileStmt)


State 81

   27 SeqExpr: LPAREN AllowNewline Stmts RPAREN .

    $default  reduce using rule 27 (SeqExpr)


State 82

   28 Stmts: Stmts Stmt .

    $default  reduce using rule 28 (Stmts)


State 83

   30 FunctionDecl: FUNCTION ID LPAREN RPAREN . ASSIGNEQ AllowNewline Stmt
   31             | FUNCTION ID LPAREN RPAREN . COLON TYPE_ID ASSIGNEQ AllowNewline Stmt

    ASSIGNEQ  shift, and go to state 90
    COLON     shift, and go to state 91


State 84

   32 Args: ID COLON . TYPE_ID COMMA Args
   33     | ID COLON . TYPE_ID

    TYPE_ID  shift, and go to state 92


State 85

   47 FunctionCall: ID LPAREN Args RPAREN .

    $default  reduce using rule 47 (FunctionCall)


State 86

   36 VarDecl: VAR ID COLON TYPE_ID BECOMES . Stmt

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 13

    Stmt          go to state 93
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 87

   45 ArrayBuild: VAR ID BECOMES ID LBRAC . Stmt RBRAC OF Stmt

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 13

    Stmt          go to state 94
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 88

   40 IfStmt: IF Stmt THEN Stmt ELSE . Stmt

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 13

    Stmt          go to state 95
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 89

   42 ForStmt: FOR ID BECOMES Stmt TO . Stmt DO Stmt

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 13

    Stmt          go to state 96
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 90

   30 FunctionDecl: FUNCTION ID LPAREN RPAREN ASSIGNEQ . AllowNewline Stmt

    NEWLINE  shift, and go to state 29

    $default  reduce using rule 39 (AllowNewline)

    AllowNewline  go to state 97


State 91

   31 FunctionDecl: FUNCTION ID LPAREN RPAREN COLON . TYPE_ID ASSIGNEQ AllowNewline Stmt

    TYPE_ID  shift, and go to state 98


State 92

   32 Args: ID COLON TYPE_ID . COMMA Args
   33     | ID COLON TYPE_ID .

    COMMA  shift, and go to state 99

    $default  reduce using rule 33 (Args)


State 93

   36 VarDecl: VAR ID COLON TYPE_ID BECOMES Stmt .

    $default  reduce using rule 36 (VarDecl)


State 94

   45 ArrayBuild: VAR ID BECOMES ID LBRAC Stmt . RBRAC OF Stmt

    RBRAC  shift, and go to state 100


State 95

   40 IfStmt: IF Stmt THEN Stmt ELSE Stmt .

    $default  reduce using rule 40 (IfStmt)


State 96

   42 ForStmt: FOR ID BECOMES Stmt TO Stmt . DO Stmt

    DO  shift, and go to state 101


State 97

   30 FunctionDecl: FUNCTION ID LPAREN RPAREN ASSIGNEQ AllowNewline . Stmt

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 13

    Stmt          go to state 102
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 98

   31 FunctionDecl: FUNCTION ID LPAREN RPAREN COLON TYPE_ID . ASSIGNEQ AllowNewline Stmt

    ASSIGNEQ  shift, and go to state 103


State 99

   32 Args: ID COLON TYPE_ID COMMA . Args

    ID  shift, and go to state 66

    $default  reduce using rule 34 (Args)

    Args  go to state 104


State 100

   45 ArrayBuild: VAR ID BECOMES ID LBRAC Stmt RBRAC . OF Stmt

    OF  shift, and go to state 105


State 101

   42 ForStmt: FOR ID BECOMES Stmt TO Stmt DO . Stmt

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 13

    Stmt          go to state 106
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 102

   30 FunctionDecl: FUNCTION ID LPAREN RPAREN ASSIGNEQ AllowNewline Stmt .

    $default  reduce using rule 30 (FunctionDecl)


State 103

   31 FunctionDecl: FUNCTION ID LPAREN RPAREN COLON TYPE_ID ASSIGNEQ . AllowNewline Stmt

    NEWLINE  shift, and go to state 29

    $default  reduce using rule 39 (AllowNewline)

    AllowNewline  go to state 107


State 104

   32 Args: ID COLON TYPE_ID COMMA Args .

    $default  reduce using rule 32 (Args)


State 105

   45 ArrayBuild: VAR ID BECOMES ID LBRAC Stmt RBRAC OF . Stmt

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 13

    Stmt          go to state 108
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 106

   42 ForStmt: FOR ID BECOMES Stmt TO Stmt DO Stmt .

    $default  reduce using rule 42 (ForStmt)


State 107

   31 FunctionDecl: FUNCTION ID LPAREN RPAREN COLON TYPE_ID ASSIGNEQ AllowNewline . Stmt

    error      shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE       shift, and go to state 4
    IF         shift, and go to state 5
    FOR        shift, and go to state 6
    WHILE      shift, and go to state 7
    LPAREN     shift, and go to state 8
    ARRAY      shift, and go to state 9
    STRING_ID  shift, and go to state 11
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 13

    Stmt          go to state 109
    Expr          go to state 16
    Term          go to state 17
    Declaration   go to state 18
    SeqExpr       go to state 19
    VarDecl       go to state 21
    IfStmt        go to state 22
    ForStmt       go to state 23
    WhileStmt     go to state 24
    ArrayDecl     go to state 25
    ArrayBuild    go to state 26
    TypeDecl      go to state 27
    FunctionCall  go to state 28


State 108

   45 ArrayBuild: VAR ID BECOMES ID LBRAC Stmt RBRAC OF Stmt .

    $default  reduce using rule 45 (ArrayBuild)


State 109

   31 FunctionDecl: FUNCTION ID LPAREN RPAREN COLON TYPE_ID ASSIGNEQ AllowNewline Stmt .

    $default  reduce using rule 31 (FunctionDecl)
